-- DROP
-- DROP SEQUENCE U1_SNE_PDB.S1;
-- DROP SEQUENCE U1_SNE_PDB.S2;
-- DROP SEQUENCE U1_SNE_PDB.S3;
-- DROP SEQUENCE U1_SNE_PDB.S4;
-- DROP TABLE T1;
-- DROP CLUSTER U1_SNE_PDB.ABC;
-- DROP TABLE A;
-- DROP TABLE B;
-- DROP TABLE C;
-- DROP SYNONYM SYNONYM_C;
-- DROP PUBLIC SYNONYM SYNONYM_B;
-- DROP TABLE A2;
-- DROP TABLE B2;
-- DROP VIEW V2;
-- DROP MATERIALIZED VIEW MV;

-- ====== TASKS =======
-- Task 1
ALTER PLUGGABLE DATABASE SNE_PDB OPEN;

GRANT CREATE SEQUENCE, CREATE CLUSTER, CREATE SYNONYM, CREATE PUBLIC SYNONYM,
CREATE MATERIALIZED VIEW, DROP PUBLIC SYNONYM TO U1_SNE_PDB;
GRANT SELECT ON SYS.DBA_CLUSTERS TO U1_SNE_PDB;
GRANT SELECT ON SYS.DBA_TABLES TO U1_SNE_PDB;
GRANT EXECUTE ON DBMS_MVIEW TO U1_SNE_PDB;

-- Task 2
CREATE SEQUENCE U1_SNE_PDB.S1
START WITH 1000
INCREMENT BY 10
NOMINVALUE
NOMAXVALUE
NOCYCLE
NOCACHE
NOORDER;

SELECT S1.NEXTVAL FROM DUAL;
SELECT S1.CURRVAL FROM DUAL;

-- Task 3
CREATE SEQUENCE U1_SNE_PDB.S2
START WITH 10
INCREMENT BY 10
MAXVALUE 100
NOCYCLE;

SELECT S2.NEXTVAL FROM DUAL;
SELECT S2.CURRVAL FROM DUAL;

-- Task 4
CREATE SEQUENCE U1_SNE_PDB.S3
START WITH 10
INCREMENT BY -10
MINVALUE -100
MAXVALue 10
NOCYCLE
ORDER;

SELECT S3.NEXTVAL FROM DUAL;
SELECT S3.CURRVAL FROM DUAL;

-- Task 5
CREATE SEQUENCE U1_SNE_PDB.S4
START WITH 1
INCREMENT BY 1
MAXVALUE 10
CYCLE
CACHE 5
NOORDER;

SELECT S4.NEXTVAL FROM DUAL;
SELECT S4.CURRVAL FROM DUAL;

-- Task 6
SELECT * FROM USER_SEQUENCES;

--Task 7
CREATE TABLE T1
(
    N1 NUMBER(20),
    N2 NUMBER(20),
    N3 NUMBER(20),
    N4 NUMBER(20)
)
CACHE STORAGE ( BUFFER_POOL KEEP );

INSERT INTO T1 (N1, N2, N3, N4)
VALUES (S1.NEXTVAL, S2.NEXTVAL, S3.NEXTVAL, S4.NEXTVAL);

SELECT  * FROM T1;

--Task 8
CREATE CLUSTER U1_SNE_PDB.ABC
(
    X NUMBER(10),
    V VARCHAR2(12)
)
HASHKEYS 200 TABLESPACE TS1_PDB_SNE;

-- Task 9
CREATE TABLE A
(
    XA NUMBER(10),
    VA varchar2(12),
    YA NUMBER(10)
)
CLUSTER U1_SNE_PDB.ABC (XA, VA);

-- Task 10
CREATE TABLE B
(
    XB NUMBER(10),
    VB varchar2(12),
    YB NUMBER(10)
)
CLUSTER U1_SNE_PDB.ABC (XB, VB);

-- Task 11
CREATE TABLE C
(
    XC NUMBER(10),
    VC varchar2(12),
    YC NUMBER(10)
)
CLUSTER U1_SNE_PDB.ABC (XC, VC);

-- Task 12
SELECT CLUSTER_NAME, OWNER FROM SYS.DBA_CLUSTERS;
SELECT * FROM SYS.DBA_CLUSTERS WHERE CLUSTER_NAME = 'ABC';
SELECT * FROM SYS.DBA_TABLES WHERE TABLE_NAME IN ('A', 'B', 'C');

-- Task 13
CREATE SYNONYM SYNONYM_C FOR U1_SNE_PDB.C;
INSERT INTO SYNONYM_C VALUES (1, 'C', 2);
SELECT * FROM SYNONYM_C;

-- Task 14
CREATE PUBLIC SYNONYM SYNONYM_B FOR U1_SNE_PDB.B;
INSERT INTO SYNONYM_B VALUES (1, 'B', 2);
SELECT * FROM SYNONYM_B;

-- Task 15
CREATE TABLE A2
(
    ID_A NUMBER(20) PRIMARY KEY,
    NAME_A VARCHAR (50)
);
CREATE TABLE B2
(
    ID_B NUMBER(10) PRIMARY KEY,
    FK_ID_A NUMBER(10),
    MESS_B VARCHAR (100),
    FOREIGN KEY (FK_ID_A) REFERENCES A2(ID_A)
);

INSERT INTO A2 (ID_A, NAME_A) VALUES (0,'Nikola');
INSERT INTO A2 (ID_A, NAME_A) VALUES (1,'Evgeniy');

INSERT INTO B2 (ID_B, FK_ID_A, MESS_B) VALUES (0, 0, 'Hello how are you');
INSERT INTO B2 (ID_B, FK_ID_A, MESS_B) VALUES (1, 1, 'Hello, im very ANGRY!!!');

CREATE VIEW V2 AS 
SELECT A2.ID_A, A2.NAME_A, B2.MESS_B
FROM A2 INNER JOIN B2
ON A2.ID_A = B2.FK_ID_A;

SELECT * FROM V2;

--Task 16
CREATE MATERIALIZED VIEW MV
REFRESH COMPLETE
START WITH SYSDATE
NEXT SYSDATE + INTERVAL '2' MINUTE
AS
SELECT A2.ID_A, A2.NAME_A, B2.MESS_B
FROM A2 INNER JOIN B2
ON A2.ID_A = B2.FK_ID_A;

SELECT * FROM MV;
INSERT INTO A2 (ID_A, NAME_A) VALUES (2,'Nikola');
INSERT INTO B2 (ID_B, FK_ID_A, MESS_B) VALUES (2, 2, 'Why are you angry?');
COMMIT;

BEGIN
    DBMS_MVIEW.REFRESH('MV');
END;